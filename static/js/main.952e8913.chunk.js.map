{"version":3,"sources":["components/HeaderComponent.js","components/ErrorComponent.js","components/LoadingComponent.js","components/LoadingPageComponent.js","components/PercentageComponent.js","components/StockLoaderComponent.js","components/SearchEngineComponent.js","components/LoadedPageComponent.js","components/BodyComponent.js","components/FooterComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Jumbotron","className","Error","isRequestSuccessful","isLoading","stockExchangeData","length","Loading","isPageLoading","dotsAnimation","Spinner","color","window","innerWidth","style","width","height","animationDuration","type","LoadingPage","Percentage","percentage","StockLoader","isInputFocused","isSearching","description","quote","quoteColor","value","displayType","thousandSeparator","prefix","finnhub","require","ApiClient","instance","authentications","apiKey","process","finnhubClient","DefaultApi","SearchEngine","props","state","activeResult","maxResults","filteredResults","stock","initialQuote","handleOnFocus","bind","handleOnBlur","handleOnSearch","handleOnKeyDown","handleOnSelect","renderStockQuote","event","target","placeholder","this","setState","currentTarget","contains","relatedTarget","string","results","keyCode","document","querySelector","parentNode","classList","add","remove","blur","symbol","item","error","data","response","statusCode","c","toFixed","intervalId","setInterval","clearInterval","Fragment","onFocus","onKeyDown","onBlur","items","fuseOptions","keys","resultStringKeyName","onSearch","onSelect","toLocaleString","styling","boxShadow","iconColor","fontSize","fontFamily","Component","LoadedPage","Body","dots","updateStockExchangeData","stockSymbols","repeat","Footer","href","rel","icon","faGithubSquare","faLinkedin","faTwitterSquare","faEnvelopeSquare","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.952e8913.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-center'>\r\n                        <h1 className='font-header'>US Stock Price Tracker</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Jumbotron>\r\n    );        \r\n}","import React from 'react';\r\n\r\nexport const Error = ({isRequestSuccessful, isLoading, stockExchangeData}) => {\r\n    if (!isRequestSuccessful && !isLoading) {\r\n        return (\r\n            stockExchangeData.length === 0\r\n            ?\r\n            <div className= 'row row-content d-flex align-items-center'>\r\n                <div className='col-12 text-center text-primary'>\r\n                    I am sorry, something went wrong, there are maybe too much users, please refresh the page or come back later . . .\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className='col-12 text-center text-primary'>\r\n                I am sorry, something went wrong, there are maybe too much users, please refresh the page or come back later . . .\r\n            </div>\r\n        );\r\n    }\r\n    else return null;\r\n}","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loading = ({ isPageLoading, dotsAnimation, isLoading }) => {\r\n    if (isPageLoading) {            \r\n        return (\r\n            <div className='col-12 text-primary'>\r\n                <div className='col-12 text-center'>\r\n                    <Spinner color='primary' />\r\n                </div>\r\n                <div className='col-12 pt-3'>\r\n                    <span className='col-10 col-lg-8 d-inline-block text-right ml-xl-4 pr-0 page-loading-sentence-position'>\r\n                        {\r\n                            window.innerWidth >= 768\r\n                            ?\r\n                            `Please wait while I am collecting data from the US Stock Exchanges`\r\n                            :\r\n                            `Collecting data from the US Stock Exchanges`\r\n                        }\r\n                    </span><span>{dotsAnimation}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (isLoading) {\r\n        return (\r\n            <div className='col-12'>\r\n                <Spinner \r\n                    style={\r\n                        { \r\n                            width: '2rem', \r\n                            height: '2rem', \r\n                            animationDuration: '1.25s' \r\n                        }\r\n                    } \r\n                    type='grow' \r\n                    color='primary' \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    else return null;\r\n};","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nexport const LoadingPage = ({isRequestSuccessful, isPageLoading, dotsAnimation}) => {\r\n    return (\r\n        isRequestSuccessful\r\n        && \r\n        isPageLoading\r\n        ?\r\n        <div className='row row-content d-flex align-items-center'>\r\n            <Loading isPageLoading={isPageLoading} dotsAnimation={dotsAnimation}/>\r\n        </div>\r\n        :\r\n        null\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Percentage = ({ percentage }) => {\r\n    if (percentage >= 0.01) {            \r\n        return <p className='text-success percentage-size'> &#8599; {percentage}% </p>;\r\n    }\r\n    else if (percentage <= -0.01) {\r\n        return <p className='text-danger percentage-size'> &#8600; {-percentage}% </p>;\r\n    }\r\n    else return null;\r\n};","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport NumberFormat from 'react-number-format';\r\nimport { Percentage } from './PercentageComponent';\r\n\r\nexport const StockLoader = ({isLoading, isInputFocused, isSearching, description, quote, quoteColor, percentage}) => {\r\n    return (\r\n        <div className='col-12 text-center'>\r\n            <Loading \r\n                isLoading={isLoading} \r\n                className={`\r\n                    ${\r\n                        isLoading \r\n                        && \r\n                        isSearching \r\n                        ? \r\n                        'hide' \r\n                        : \r\n                        ''\r\n                    }\r\n                `}\r\n            />\r\n            <div className={`\r\n                ${\r\n                    isLoading \r\n                    || \r\n                    description === '' \r\n                    || \r\n                    (isInputFocused && isSearching) \r\n                    ? \r\n                    'hide' \r\n                    : \r\n                    ''\r\n                }\r\n            `}>\r\n                <p className='text-primary title-size'> {description} </p>\r\n                <NumberFormat \r\n                    value={quote} \r\n                    displayType={'text'} \r\n                    thousandSeparator={true} \r\n                    prefix={'$'} \r\n                    className={`${quoteColor} quote-size `}\r\n                />\r\n                <Percentage percentage={percentage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\nimport { StockLoader } from './StockLoaderComponent';\r\nimport { Error } from './ErrorComponent';\r\n\r\n///////////////////////////////////\r\n// Requirements to use Finnhub API \r\n// Finnhub API allows us to get real-time quote data for US stocks\r\nconst finnhub = require('finnhub');\r\n \r\nconst api_key = finnhub.ApiClient.instance.authentications['api_key'];\r\n// Hide the API key\r\napi_key.apiKey = process.env.REACT_APP_FINNHUB_API_KEY;\r\nconst finnhubClient = new finnhub.DefaultApi();\r\n\r\nexport class SearchEngine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isRequestSuccessful: true,\r\n            isInputFocused: false,\r\n            isSearching: false,\r\n            activeResult: 0,\r\n            maxResults: 3,\r\n            filteredResults: [],\r\n            stock: '',\r\n            isLoading: false,\r\n            description: '',\r\n            percentage: null,\r\n            initialQuote: null,\r\n            quote: null,\r\n            quoteColor: 'text-primary',\r\n        };\r\n\r\n        this.handleOnFocus = this.handleOnFocus.bind(this);\r\n        this.handleOnBlur = this.handleOnBlur.bind(this);\r\n        this.handleOnSearch = this.handleOnSearch.bind(this);\r\n        this.handleOnKeyDown = this.handleOnKeyDown.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        this.renderStockQuote = this.renderStockQuote.bind(this);\r\n    }    \r\n\r\n    handleOnFocus(event) {\r\n        event.target.placeholder = '';\r\n        this.setState({ isInputFocused: true });\r\n    }\r\n\r\n    handleOnBlur(event) {  \r\n        if (!event.currentTarget.contains(event.relatedTarget)) {\r\n            if (this.state.isInputFocused) {  \r\n                this.setState({\r\n                    isInputFocused: false,\r\n                    isSearching: false,\r\n                    activeResult: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnSearch(string, results) {\r\n        this.setState({\r\n            isSearching: true,\r\n            filteredResults: [...results]\r\n        });\r\n    }\r\n        \r\n    handleOnKeyDown(event) {        \r\n        if (this.state.isSearching) {\r\n            if (event.keyCode === 40) {\r\n                if (this.state.activeResult < this.state.maxResults - 1) this.setState({ activeResult: this.state.activeResult + 1 });\r\n                if (this.state.activeResult === 0) {\r\n                    document.querySelector(`[title='${this.state.filteredResults[this.state.activeResult].description}']`).parentNode.classList.add('my-style');\r\n                }\r\n                else {\r\n                    document.querySelector(`[title='${this.state.filteredResults[this.state.activeResult].description}']`).parentNode.classList.add('my-style');\r\n                    document.querySelector(`[title='${this.state.filteredResults[this.state.activeResult - 1].description}']`).parentNode.classList.remove('my-style');\r\n                }\r\n            }\r\n            else if (event.keyCode === 38) {\r\n                if (this.state.activeResult === 0) {\r\n                    document.querySelector(`[title='${this.state.filteredResults[this.state.activeResult].description}']`).parentNode.classList.remove('my-style');\r\n                }\r\n                else {\r\n                    this.setState({ activeResult: this.state.activeResult - 1 });\r\n                    document.querySelector(`[title='${this.state.filteredResults[this.state.activeResult - 1].description}']`).parentNode.classList.add('my-style');\r\n                    document.querySelector(`[title='${this.state.filteredResults[this.state.activeResult].description}']`).parentNode.classList.remove('my-style');\r\n                }\r\n            }\r\n            else if (event.keyCode === 13) { \r\n                event.target.blur();\r\n                this.setState({\r\n                    stock: this.state.activeResult > 0 ? this.state.filteredResults[this.state.activeResult - 1].symbol : this.state.filteredResults[this.state.activeResult].symbol,\r\n                    isLoading: true,\r\n                    description: this.state.activeResult > 0 ? this.state.filteredResults[this.state.activeResult - 1].description : this.state.filteredResults[this.state.activeResult].description,\r\n                    percentage: null,\r\n                    initialQuote: null,\r\n                    quote: null,\r\n                    quoteColor: 'text-primary',\r\n                    isInputFocused: false,\r\n                    isSearching: false,\r\n                    activeResult: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnSelect(item) {\r\n        this.setState({\r\n            stock: item.symbol,\r\n            isLoading: true,\r\n            description: item.description,\r\n            percentage: null,\r\n            initialQuote: null,\r\n            quote: null,\r\n            quoteColor: 'text-primary',\r\n            isInputFocused: false,\r\n            isSearching: false,\r\n            activeResult: 0\r\n        })\r\n    }\r\n\r\n    renderStockQuote(stock, quote) {\r\n        if (stock !== '') {\r\n            finnhubClient.quote(stock, (error, data, response) => { \r\n                if (response.statusCode === 429) {\r\n                    this.setState({\r\n                        isRequestSuccessful: false,\r\n                        isLoading: false,\r\n                        description: ''\r\n                    });\r\n                }\r\n                else if (quote === null) {\r\n                    this.setState({\r\n                        initialQuote: data.c,\r\n                        quote: data.c,\r\n                        isLoading: false\r\n                    }); \r\n                }\r\n                else {\r\n                    // If price rises, the quote color turns to green\r\n                    if (data.c > quote) {\r\n                        this.setState({\r\n                            quote: data.c,\r\n                            quoteColor: 'text-success'\r\n                        }); \r\n                    }\r\n                    // If price falls, the quote color turns to red\r\n                    else if (data.c < quote) {\r\n                        this.setState({\r\n                            quote: data.c,\r\n                            quoteColor: 'text-danger'\r\n                        }); \r\n                    }\r\n                    // Compute percentage change of current quote from the initial quote\r\n                    this.setState({ percentage: ((data.c - quote) / quote).toFixed(2) });\r\n                }\r\n            });  \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get the real-time stock quote every 5 seconds\r\n        this.intervalId = setInterval(() => {\r\n            this.renderStockQuote(this.state.stock, this.state.quote);\r\n        }, 5000);\r\n        this.renderStockQuote(this.state.stock, this.state.quote);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n                <div  \r\n                    className='col-12 col-lg-10 offset-lg-1 col-xl-8 offset-xl-2 searchbox-position'\r\n                    onFocus={(event) => this.handleOnFocus(event)}\r\n                    onKeyDown={(event) => this.handleOnKeyDown(event)}\r\n                    onBlur={(event) => this.handleOnBlur(event)}\r\n                >\r\n                    <ReactSearchAutocomplete \r\n                        items={this.props.stockExchangeData}  \r\n                        fuseOptions={{\r\n                            keys: [\r\n                                'description',\r\n                                'symbol'\r\n                            ]          \r\n                        }}\r\n                        resultStringKeyName='description'\r\n                        onSearch={(string, results) => this.handleOnSearch(string, results)}\r\n                        onSelect={(item) => this.handleOnSelect(item)}\r\n                        maxResults={this.state.maxResults}\r\n                        placeholder={\r\n                            window.innerWidth >= 768\r\n                            ?\r\n                            `Get the real-time US stock price you desire amongst the ${this.props.stockExchangeData.length.toLocaleString('en-US')} available`\r\n                            :\r\n                            `Get one of the ${this.props.stockExchangeData.length.toLocaleString('en-US')} real-time US stock prices available`\r\n                        }\r\n                        styling={\r\n                            {\r\n                                boxShadow: '#5350ffcc 0px 1px 6px 0px',\r\n                                iconColor: '#5350ffcc',\r\n                                fontSize: '1rem',\r\n                                fontFamily: 'Calibri'\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n                <StockLoader \r\n                    isLoading={this.state.isLoading} \r\n                    isInputFocused={this.state.isInputFocused}\r\n                    isSearching={this.state.isSearching}\r\n                    description={this.state.description}\r\n                    quote={this.state.quote}\r\n                    quoteColor={this.state.quoteColor} \r\n                    percentage={this.state.percentage}\r\n                />\r\n                <Error \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isLoading={this.state.isLoading}\r\n                    stockExchangeData={this.props.stockExchangeData}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { SearchEngine } from './SearchEngineComponent';\r\n\r\nexport const LoadedPage = ({isRequestSuccessful, isPageLoading, stockExchangeData}) => {\r\n    return (\r\n        isRequestSuccessful \r\n        && \r\n        !isPageLoading\r\n        ?\r\n        <div className='row row-content'>\r\n            <SearchEngine stockExchangeData={stockExchangeData} />\r\n        </div>\r\n        :\r\n        null\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Error } from './ErrorComponent';\r\nimport { LoadingPage } from './LoadingPageComponent';\r\nimport { LoadedPage } from './LoadedPageComponent';\r\n\r\n///////////////////////////////////\r\n// Requirements to use Finnhub API \r\n// Finnhub API allows us to get real-time quote data for US stocks\r\nconst finnhub = require('finnhub');\r\n \r\nconst api_key = finnhub.ApiClient.instance.authentications['api_key'];\r\n// Hide the API key\r\napi_key.apiKey = process.env.REACT_APP_FINNHUB_API_KEY;\r\nconst finnhubClient = new finnhub.DefaultApi();\r\n\r\nexport class Body extends Component {\r\n     \r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isPageLoading: true,\r\n            stockExchangeData: [],\r\n            isRequestSuccessful: true,\r\n            dots: 1\r\n        };\r\n\r\n        this.updateStockExchangeData = this.updateStockExchangeData.bind(this);\r\n    }\r\n \r\n    updateStockExchangeData() {\r\n        finnhubClient.stockSymbols('US', (error, data, response) => {\r\n            if (response.statusCode === 429) { \r\n                this.setState({\r\n                    isRequestSuccessful: false,\r\n                    isPageLoading: false\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    stockExchangeData: data,\r\n                    isPageLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // Get the US Stock Exchange data as soon as everything else have been loaded\r\n        this.updateStockExchangeData();\r\n\r\n        // Add up to 3 dots to the message while loading Stock Exchange data\r\n        this.intervalId = setInterval(() => {\r\n            this.setState({ dots: this.state.dots === 3 ? 0 : this.state.dots + 1 });\r\n        }, 300);\r\n    }    \r\n                     \r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    render() {          \r\n        \r\n        let dotsAnimation = this.state.dots === 0 ? '' : ' .'.repeat(this.state.dots);\r\n\r\n        return (\r\n            <div className='container'>\r\n                <Error \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isLoading={this.state.isPageLoading}\r\n                    stockExchangeData={this.state.stockExchangeData}\r\n                />\r\n                <LoadingPage \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isPageLoading={this.state.isPageLoading}\r\n                    dotsAnimation={dotsAnimation} \r\n                />\r\n                <LoadedPage \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isPageLoading={this.state.isPageLoading}\r\n                    stockExchangeData={this.state.stockExchangeData}\r\n                /> \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <div className='container'>\r\n                <div className='row'>             \r\n                    <div className='col-12'>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-github-square btn-primary btn-third-dimension' \r\n                                href='https://github.com/abDevII' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faGithubSquare} />\r\n                            </a>\r\n                        </div>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-linkedin btn-third-dimension' \r\n                                href='https://www.linkedin.com/in/arthur-j-barbey/' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faLinkedin} />\r\n                            </a>\r\n                        </div>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-twitter btn-third-dimension' \r\n                                href='https://twitter.com/BarbeyArthur' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faTwitterSquare} />\r\n                            </a>\r\n                        </div>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-primary btn-third-dimension' \r\n                                href='mailto:barbey.arthur@gmail.com' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faEnvelopeSquare} />\r\n                            </a>       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Header } from './HeaderComponent';\r\nimport { Body } from './BodyComponent';\r\nimport { Footer } from './FooterComponent';\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Body />\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Main } from './components/MainComponent';\nimport './App.css';\n\nexport class App extends Component {\n  render() {\n    return <Main />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}