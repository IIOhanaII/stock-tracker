{"version":3,"sources":["components/HeaderComponent.js","FinnhubAPI.js","components/ErrorComponent.js","components/LoadingComponent.js","components/LoadingPageComponent.js","components/PriceStatsComponent.js","components/StockLoaderComponent.js","components/SearchEngineComponent.js","utilities/utilities.js","components/LoadedPageComponent.js","components/BodyComponent.js","components/FooterComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Jumbotron","className","finnhub","require","ApiClient","instance","authentications","apiKey","process","finnhubClient","DefaultApi","Error","isRequestSuccessful","isLoading","stockExchangeData","length","Loading","isPageLoading","window","innerWidth","Spinner","style","width","height","animationDuration","type","color","LoadingPage","PriceStats","delta","percentage","opacity","StockLoader","isInputFocused","isSearching","description","quote","quoteColor","value","displayType","thousandSeparator","decimalScale","prefix","SearchEngine","props","state","activeResult","filteredResults","initialQuote","maxResults","stock","handleOnFocus","bind","handleOnBlur","handleOnSearch","handleOnKeyDown","handleOnSelect","renderStockQuote","this","setState","document","getElementsByTagName","classList","add","event","input","currentTarget","contains","relatedTarget","remove","string","results","keyCode","querySelector","parentNode","onKeyUp","target","blur","symbol","item","error","data","response","statusCode","c","Math","round","Number","EPSILON","intervalId","setInterval","clearInterval","Fragment","onFocus","onKeyDown","onBlur","items","fuseOptions","keys","resultStringKeyName","onSearch","onSelect","placeholder","toLocaleString","styling","boxShadow","iconColor","fontSize","fontFamily","Component","LoadedPage","Body","updateStockExchangeData","stockSymbols","console","log","dataWithIds","map","idx","id","Footer","href","rel","icon","faGithubSquare","faLinkedin","faTwitterSquare","faEnvelopeSquare","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.998df9d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <Jumbotron>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-center'>\r\n                        <h1 className='font-header_1'>STOCK TRACKER</h1>\r\n                        <h6 className='font-header_2'>REAL-TIME PRICES FROM THE STOCK EXCHANGES</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Jumbotron>\r\n    );        \r\n}","///////////////////////////////////\r\n// Requirements to use Finnhub API \r\n// Finnhub API allows us to get real-time quote data for US stocks\r\nconst finnhub = require('finnhub');\r\n \r\nconst api_key = finnhub.ApiClient.instance.authentications['api_key'];\r\n// Hide the API key\r\napi_key.apiKey = process.env.REACT_APP_FINNHUB_API_KEY;\r\nexport const finnhubClient = new finnhub.DefaultApi();","import React from 'react';\r\n\r\nexport const Error = ({isRequestSuccessful, isLoading, stockExchangeData}) => {\r\n    if (!isRequestSuccessful && !isLoading) {\r\n        return (\r\n            stockExchangeData.length === 0\r\n            ?\r\n            <div className= 'row row-content d-flex align-items-center'>\r\n                <div className='col-12 text-center text-primary'>\r\n                    I am sorry, something went wrong, there are maybe too much users, please refresh the page or come back later . . .\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className='col-12 text-center text-primary'>\r\n                I am sorry, something went wrong, there are maybe too much users, please refresh the page or come back later . . .\r\n            </div>\r\n        );\r\n    }\r\n    else return null;\r\n}","import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loading = ({ isPageLoading, isLoading }) => {\r\n    if (isPageLoading) {            \r\n        return (\r\n            <div className='col-12'>\r\n                <div className=\"sk-wave sk-center\">\r\n                    <div className=\"sk-wave-rect\"></div>\r\n                    <div className=\"sk-wave-rect\"></div>\r\n                    <div className=\"sk-wave-rect\"></div>\r\n                    <div className=\"sk-wave-rect\"></div>\r\n                    <div className=\"sk-wave-rect\"></div>\r\n                </div>\r\n                <span className='d-block text-center text-primary pt-3 pb-0'>\r\n                    {\r\n                        window.innerWidth >= 768\r\n                        ?\r\n                        'Please wait while I am collecting data from the Stock Exchanges'\r\n                        :\r\n                        'Collecting data from the US Stock Exchanges'\r\n                    }\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n    else if (isLoading) {\r\n        return (\r\n            <div className='col-12'>\r\n                <Spinner \r\n                    style={\r\n                        { \r\n                            width: '2rem', \r\n                            height: '2rem', \r\n                            animationDuration: '1.25s' \r\n                        }\r\n                    } \r\n                    type='grow' \r\n                    color='primary' \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    else return null;\r\n};","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nexport const LoadingPage = ({isRequestSuccessful, isPageLoading}) => {\r\n    return (\r\n        isRequestSuccessful\r\n        && \r\n        isPageLoading\r\n        ?\r\n        <div className='row row-content d-flex align-items-center'>\r\n            <Loading isPageLoading={isPageLoading}/>\r\n        </div>\r\n        :\r\n        null\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const PriceStats = ({ delta, percentage }) => {\r\n    if (delta > 0) {\r\n        return (\r\n            <div className='text-success stats-size'>\r\n                <span> &#8599; {delta} </span>\r\n                <span>\r\n                    {\r\n                        percentage >= 0.01 \r\n                        ? \r\n                        `(${percentage})%` \r\n                        : \r\n                        null\r\n                    } \r\n                </span>\r\n            </div>    \r\n        );\r\n    }\r\n    else if (delta < 0) {\r\n        return (\r\n            <div className='text-danger stats-size'>\r\n                <span> &#8600; {-delta} </span>\r\n                <span>\r\n                    {\r\n                        percentage <= -0.01 \r\n                        ? \r\n                        `(${-percentage})%` \r\n                        : \r\n                        null\r\n                    } \r\n                </span>\r\n            </div> \r\n        );\r\n    }   \r\n    else return <div style={{opacity: 0}}>0</div>;\r\n};","import React from 'react';\r\nimport { Loading } from './LoadingComponent';\r\nimport NumberFormat from 'react-number-format';\r\nimport { PriceStats } from './PriceStatsComponent';\r\n\r\nexport const StockLoader = ({isLoading, isInputFocused, isSearching, description, quote, quoteColor, delta, percentage}) => {\r\n    return (\r\n        <div className='col-12 text-center'>\r\n            <Loading \r\n                isLoading={isLoading} \r\n                className={`\r\n                    ${\r\n                        isLoading \r\n                        && \r\n                        isSearching \r\n                        ? \r\n                        'd-none' \r\n                        : \r\n                        ''\r\n                    }\r\n                `}\r\n            />\r\n            \r\n            <div className={`\r\n                ${\r\n                    isLoading \r\n                    || \r\n                    description === '' \r\n                    || \r\n                    (isInputFocused && isSearching) \r\n                    ? \r\n                    'd-none' \r\n                    : \r\n                    ''\r\n                }\r\n            `}>\r\n                <p className='text-primary title'> {description} </p>\r\n\r\n                <NumberFormat \r\n                    value={quote} \r\n                    displayType={'text'} \r\n                    thousandSeparator={true} \r\n                    decimalScale={2}\r\n                    prefix={'$'} \r\n                    className={`${quoteColor} quote-size`}\r\n                />\r\n\r\n                <PriceStats\r\n                    delta={delta} \r\n                    percentage={percentage} \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { finnhubClient } from '../FinnhubAPI';\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\r\nimport { onKeyDown, onKeyUp } from '../utilities/utilities.js'\r\nimport { StockLoader } from './StockLoaderComponent';\r\nimport { Error } from './ErrorComponent';\r\n\r\nexport class SearchEngine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeResult: 0,\r\n            delta: null,\r\n            description: '',\r\n            filteredResults: [],\r\n            initialQuote: null,\r\n            isInputFocused: false,\r\n            isLoading: false,\r\n            isRequestSuccessful: true,\r\n            isSearching: false,\r\n            maxResults: 3,\r\n            percentage: null,\r\n            quote: null,\r\n            quoteColor: 'text-primary',\r\n            stock: ''  \r\n        };\r\n\r\n        this.handleOnFocus = this.handleOnFocus.bind(this);\r\n        this.handleOnBlur = this.handleOnBlur.bind(this);\r\n        this.handleOnSearch = this.handleOnSearch.bind(this);\r\n        this.handleOnKeyDown = this.handleOnKeyDown.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        this.renderStockQuote = this.renderStockQuote.bind(this);\r\n    }    \r\n\r\n    handleOnFocus() {\r\n        this.setState({ isInputFocused: true });\r\n\r\n        document.getElementsByTagName('input')[0].classList.add('placeholder-color');\r\n    }\r\n\r\n    handleOnBlur(event) {          \r\n        let input = document.getElementsByTagName('input')[0];\r\n\r\n        if (!event.currentTarget.contains(event.relatedTarget)) {\r\n            if (this.state.isInputFocused) {  \r\n                this.setState({\r\n                    isInputFocused: false,\r\n                    isSearching: false,\r\n                    activeResult: 0\r\n                });\r\n                if (input.value === '') input.classList.remove('placeholder-color');\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnSearch(string, results) {\r\n        this.setState({\r\n            isSearching: true,\r\n            filteredResults: [...results]\r\n        });\r\n    }\r\n        \r\n    handleOnKeyDown(event) {        \r\n        if (this.state.isSearching) {\r\n            if (event.keyCode === 40) {\r\n                if (this.state.activeResult < this.state.maxResults - 1) this.setState({ activeResult: this.state.activeResult + 1 });\r\n                onKeyDown(this.state.activeResult, this.state.filteredResults);\r\n            }         \r\n            else if (event.keyCode === 38) {\r\n                if (this.state.activeResult !== 0) this.setState({ activeResult: this.state.activeResult - 1 });\r\n                onKeyUp(this.state.activeResult, this.state.filteredResults);               \r\n            }\r\n            else if (event.keyCode === 13) { \r\n                event.target.blur();\r\n                this.setState({\r\n                    stock: this.state.activeResult > 0 ? this.state.filteredResults[this.state.activeResult - 1].symbol : this.state.filteredResults[this.state.activeResult].symbol,\r\n                    isLoading: true,\r\n                    description: this.state.activeResult > 0 ? this.state.filteredResults[this.state.activeResult - 1].description : this.state.filteredResults[this.state.activeResult].description,\r\n                    delta: null,\r\n                    percentage: null,\r\n                    initialQuote: null,\r\n                    quote: null,\r\n                    quoteColor: 'text-primary',\r\n                    isInputFocused: false,\r\n                    isSearching: false,\r\n                    activeResult: 0\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnSelect(item) {\r\n        this.setState({\r\n            stock: item.symbol,\r\n            isLoading: true,\r\n            description: item.description,\r\n            delta: null,\r\n            percentage: null,\r\n            initialQuote: null,\r\n            quote: null,\r\n            quoteColor: 'text-primary',\r\n            isInputFocused: false,\r\n            isSearching: false,\r\n            activeResult: 0\r\n        })\r\n    }\r\n\r\n    renderStockQuote(stock, initialQuote, quote) {\r\n        if (stock !== '') {\r\n            finnhubClient.quote(stock, (error, data, response) => { \r\n                if (response.statusCode !== 200) {\r\n                    this.setState({\r\n                        isRequestSuccessful: false,\r\n                        isLoading: false,\r\n                        description: ''\r\n                    });\r\n                }\r\n                else if (quote === null) {\r\n                    this.setState({\r\n                        initialQuote: data.c,\r\n                        quote: data.c,\r\n                        isLoading: false\r\n                    }); \r\n                }\r\n                else {\r\n                    // If price rises, the quote color turns to green\r\n                    if (data.c > quote) {\r\n                        this.setState({\r\n                            quote: data.c,\r\n                            quoteColor: 'text-success'\r\n                        }); \r\n                    }\r\n                    // If price falls, the quote color turns to red\r\n                    else if (data.c < quote) {\r\n                        this.setState({\r\n                            quote: data.c,\r\n                            quoteColor: 'text-danger'\r\n                        }); \r\n                    }\r\n                    ///////////\r\n                    // Compute and round to at most 2 decimal places\r\n                    // - delta between current quote and the initial quote\r\n                    // - percentage change of current quote from the initial quote\r\n                    this.setState({ \r\n                        delta: Math.round(((data.c - initialQuote) + Number.EPSILON) * 100) / 100,\r\n                        percentage: Math.round((((data.c - initialQuote) / initialQuote) + Number.EPSILON) * 100) / 100\r\n                    });\r\n                }\r\n            });  \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get the real-time stock quote every 5 seconds\r\n        this.intervalId = setInterval(() => {\r\n            this.renderStockQuote(this.state.stock, this.state.initialQuote, this.state.quote);\r\n        }, 5000);\r\n        this.renderStockQuote(this.state.stock, this.state.initialQuote, this.state.quote);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    render() {    \r\n        return ( \r\n            <React.Fragment>\r\n                <div  \r\n                    className='col-12 col-lg-10 offset-lg-1 col-xl-8 offset-xl-2 searchbox-position'\r\n                    onFocus={this.handleOnFocus}\r\n                    onKeyDown={(event) => this.handleOnKeyDown(event)}\r\n                    onBlur={(event) => this.handleOnBlur(event)}\r\n                >\r\n                    <ReactSearchAutocomplete \r\n                        items={this.props.stockExchangeData}  \r\n                        fuseOptions={{\r\n                            keys: [\r\n                                'description',\r\n                                'symbol'\r\n                            ]          \r\n                        }}\r\n                        resultStringKeyName='description'\r\n                        onSearch={(string, results) => this.handleOnSearch(string, results)}\r\n                        onSelect={(item) => this.handleOnSelect(item)}\r\n                        maxResults={this.state.maxResults}\r\n                        placeholder={\r\n                            window.innerWidth >= 500\r\n                            ?\r\n                            `Get real-time US stock prices amongst the ${this.props.stockExchangeData.length.toLocaleString('en-US')} available`\r\n                            :\r\n                            `${this.props.stockExchangeData.length.toLocaleString('en-US')} stock prices`\r\n                        }\r\n                        styling={\r\n                            {\r\n                                boxShadow: '#5350ffcc 0px 1px 6px 0px',\r\n                                iconColor: '#5350ffcc',\r\n                                fontSize: '1rem',\r\n                                fontFamily: \"'Lato', sans-serif\"\r\n                            }\r\n                        }\r\n                    />\r\n                </div>\r\n                <StockLoader \r\n                    isLoading={this.state.isLoading} \r\n                    isInputFocused={this.state.isInputFocused}\r\n                    isSearching={this.state.isSearching}\r\n                    description={this.state.description}\r\n                    quote={this.state.quote}\r\n                    quoteColor={this.state.quoteColor} \r\n                    delta={this.state.delta}\r\n                    percentage={this.state.percentage}\r\n                />\r\n                <Error \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isLoading={this.state.isLoading}\r\n                    stockExchangeData={this.props.stockExchangeData}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","export const onKeyDown = (activeResult, filteredResults) => {\r\n    if (activeResult === 0) {\r\n        document.querySelector(`[title='${filteredResults[activeResult].description}']`).parentNode.classList.add('highlight-result');\r\n    }\r\n    else {\r\n        document.querySelector(`[title='${filteredResults[activeResult].description}']`).parentNode.classList.add('highlight-result');\r\n        document.querySelector(`[title='${filteredResults[activeResult - 1].description}']`).parentNode.classList.remove('highlight-result');\r\n    }\r\n}\r\n\r\nexport const onKeyUp = (activeResult, filteredResults) => {\r\n    if (activeResult === 0) {\r\n        document.querySelector(`[title='${filteredResults[activeResult].description}']`).parentNode.classList.remove('highlight-result');\r\n    }\r\n    else {\r\n        document.querySelector(`[title='${filteredResults[activeResult - 1].description}']`).parentNode.classList.add('highlight-result');\r\n        document.querySelector(`[title='${filteredResults[activeResult].description}']`).parentNode.classList.remove('highlight-result');\r\n    }\r\n}","import React from 'react';\r\nimport { SearchEngine } from './SearchEngineComponent';\r\n\r\nexport const LoadedPage = ({isRequestSuccessful, isPageLoading, stockExchangeData}) => {\r\n    return (\r\n        isRequestSuccessful \r\n        && \r\n        !isPageLoading\r\n        ?\r\n        <div className='row row-content'>\r\n            <SearchEngine stockExchangeData={stockExchangeData} />\r\n        </div>\r\n        :\r\n        null\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { finnhubClient } from '../FinnhubAPI.js';\r\nimport { Error } from './ErrorComponent';\r\nimport { LoadingPage } from './LoadingPageComponent';\r\nimport { LoadedPage } from './LoadedPageComponent';\r\n\r\nexport class Body extends Component {\r\n     \r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isPageLoading: true,\r\n            stockExchangeData: [],\r\n            isRequestSuccessful: true\r\n        };\r\n\r\n        this.updateStockExchangeData = this.updateStockExchangeData.bind(this);\r\n    }\r\n \r\n    updateStockExchangeData() {\r\n        finnhubClient.stockSymbols('US', (error, data, response) => {\r\n            console.log(response);\r\n            if (response.statusCode !== 200) { \r\n                this.setState({\r\n                    isRequestSuccessful: false,\r\n                    isPageLoading: false\r\n                });\r\n            }\r\n            else {\r\n                const dataWithIds = data.map((item, idx) => ({\r\n                    ...item,\r\n                    id: item.description\r\n                  }))\r\n                this.setState({\r\n                    stockExchangeData: dataWithIds,\r\n                    isPageLoading: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        // Get the US Stock Exchange data as soon as everything else have been loaded\r\n        this.updateStockExchangeData();\r\n    }    \r\n                     \r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    render() {          \r\n        return (\r\n            <div className='container main'>\r\n                <Error \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isLoading={this.state.isPageLoading}\r\n                    stockExchangeData={this.state.stockExchangeData}\r\n                />\r\n                <LoadingPage \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isPageLoading={this.state.isPageLoading}\r\n                />\r\n                <LoadedPage \r\n                    isRequestSuccessful={this.state.isRequestSuccessful}\r\n                    isPageLoading={this.state.isPageLoading}\r\n                    stockExchangeData={this.state.stockExchangeData}\r\n                /> \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <div className='container'>\r\n                <div className='row'>             \r\n                    <div className='col-12'>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-github-square btn-primary btn-third-dimension' \r\n                                href='https://github.com/abDevII' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faGithubSquare} />\r\n                            </a>\r\n                        </div>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-linkedin btn-third-dimension' \r\n                                href='https://www.linkedin.com/in/arthur-j-barbey/' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faLinkedin} />\r\n                            </a>\r\n                        </div>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-twitter btn-third-dimension' \r\n                                href='https://twitter.com/BarbeyArthur' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faTwitterSquare} />\r\n                            </a>\r\n                        </div>\r\n                        <div className='col-3 d-inline-block text-center'>\r\n                            <a \r\n                                className='btn btn-social-icon btn-primary btn-third-dimension' \r\n                                href='mailto:barbey.arthur@gmail.com' \r\n                                target='_blank' \r\n                                rel='noreferrer'\r\n                            >\r\n                                <FontAwesomeIcon icon={faEnvelopeSquare} />\r\n                            </a>       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Header } from './HeaderComponent';\r\nimport { Body } from './BodyComponent';\r\nimport { Footer } from './FooterComponent';\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <Body />\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Main } from './components/MainComponent';\nimport './App.css';\n\nexport class App extends Component {\n  render() {\n    return <Main />\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'spinkit/spinkit.min.css';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}